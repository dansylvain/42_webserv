
# pourquoi pas, apres tout?
    [global] toto
maxClient			= 1024			# DONE
errorPagesPath		= errorPages/	# not added to struct yet
indexFiles			= index.html, index.htm, default.html

# il est possible de faire des commentaire
[errorPages] # ta grande soeur


errorPage_201 = 201.html	# DONE
errorPage_204 = 204.html	# DONE
errorPage_400 = 400.html	# DONE
errorPage_401 = 401.html	# DONE
errorPage_403 = 403.html	# DONE
errorPage_404 = 404.html	# DONE
errorPage_413 = 413.html	# DONE
errorPage_422 = 422.html	# DONE
errorPage_431 = 431.html	# DONE
errorPage_500 = 500.html	# DONE
errorPage_502 = 502.html	# DONE

errorPage_503 = 503.html # DONE
errorPage_504 = 504.html # DONE

	[server1]
host				= 0.0.0.0
port				= 1510
serverName			= "server1"

[server2]
host				= 0.0.0.0
port				= 1511


		serverName			= "server2"

              [server3]
host				= 0.0.0.0
port				= 1512
serverName			= "server3"
          
[route1]   
allowedMethods = GET, POST, DELETE # If there is none mentionned, I'll assume I have full authorizations.
redirection = /cyborg_gaming # One value
routeMapping = /coucou, /testResponseBuilder/redirectDefaultPath # Two values mandatory
listingDirectory    = 1                # DONE only 0 and 1 supported for now
defaultPath = index.html # One value
cgiAllowed = .php, .py # Must be either .php, .py and nothing else
uploadAllowed = 1
uploadDirectory = /var/www/uploads
uploadDirectory = /var/www/heheheheheheeh
routeMapping = "/coucou", "/tmp/www"# Obligatoirement deux valeurs sous forme de map<string, string>

# std::map<std::string, std::string> innerMap1;
# innerMap1.insert(std::make_pair("/coucou", "/testResponseBuilder/mapingPath"));
# routeMapping.insert(std::make_pair("/", innerMap1));


[route2]
...
[route3]
...
